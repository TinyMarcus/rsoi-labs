apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres-service
spec:
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/version: "13"
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
data:
  create-user-and-db.sql: |
    CREATE DATABASE hotel_system;
    CREATE ROLE program WITH PASSWORD 'test';
    GRANT ALL PRIVILEGES ON DATABASE hotel_system TO program;
    ALTER ROLE program WITH LOGIN;
    
    CREATE TABLE "Hotels" (
    id        SERIAL PRIMARY KEY,
    hotel_uid uuid         NOT NULL UNIQUE,
    name      VARCHAR(255) NOT NULL,
    country   VARCHAR(80)  NOT NULL,
    city      VARCHAR(80)  NOT NULL,
    address   VARCHAR(255) NOT NULL,
    stars     INT,
    price     INT          NOT NULL);

    CREATE TABLE "Reservations" (
    id              SERIAL PRIMARY KEY,
    reservation_uid uuid UNIQUE NOT NULL,
    username        VARCHAR(80) NOT NULL,
    payment_uid     uuid        NOT NULL,
    hotel_id        INT REFERENCES "Hotels" (id),
    status          VARCHAR(20) NOT NULL
        CHECK (status IN ('PAID', 'CANCELED')),
    start_date      TIMESTAMP WITH TIME ZONE,
    end_date        TIMESTAMP WITH TIME ZONE);

    CREATE TABLE "Loyalties" (
    id                SERIAL PRIMARY KEY,
    username          VARCHAR(80) NOT NULL UNIQUE,
    reservation_count INT         NOT NULL DEFAULT 0,
    status            VARCHAR(80) NOT NULL DEFAULT 'BRONZE'
        CHECK (status IN ('BRONZE', 'SILVER', 'GOLD')),
    discount          INT         NOT NULL);

    CREATE TABLE "Payments" (
        id          SERIAL PRIMARY KEY,
        payment_uid uuid        NOT NULL,
        status      VARCHAR(20) NOT NULL
            CHECK (status IN ('PAID', 'CANCELED')),
        price       INT         NOT NULL);

    INSERT INTO public."Hotels" (id, hotel_uid, name, country, city, address, stars, price) VALUES (1, '049161bb-badd-4fa8-9d90-87c9a82b0668', 'Ararat Park Hyatt Moscow', 'Россия', 'Москва', 'Неглинная ул., 4', 5, 10000);

    INSERT INTO public."Loyalties" (id, username, reservation_count, status, discount) VALUES (1, 'Test Max', 25, 'GOLD', 10);
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/version: "13"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
        app.kubernetes.io/version: "13"
    spec:
      containers:
        - name: postgres
          image: postgres:13
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: postgres
          ports:
            - name: postgres
              containerPort: 5432
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-config-map
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: db-data
        - name: postgres-config-map
          configMap:
            name: postgres-config